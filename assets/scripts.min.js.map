{"version":3,"sources":["1-object-fit.js","2-theme.js"],"names":["objectFitImages","OFI","propRegex","testImg","Image","style","object-position","supportsObjectFit","supportsObjectPosition","supportsOFI","supportsCurrentSrc","currentSrc","nativeGetAttribute","getAttribute","nativeSetAttribute","setAttribute","autoModeEnabled","setPlaceholder","img","width","height","placeholder","call","onImageReady","callback","naturalWidth","setTimeout","fixOne","el","descriptors","parsed","getComputedStyle","fontFamily","props","exec","getStyle","ofi","skipTest","srcset","src","naturalHeight","get","prop","set","value","Object","defineProperty","ss","err","window","console","warn","picturefill","pf","_","ns","evaled","fillImg","reselect","curSrc","supported","polyfillCurrentSrc","backgroundImage","replace","backgroundPosition","backgroundRepeat","backgroundOrigin","test","backgroundSize","fix","imgs","opts","startAutoMode","document","getElementsByTagName","querySelectorAll","i","length","body","addEventListener","e","target","tagName","watchMQ","bind","getOfiImageMaybe","name","HTMLImageElement","prototype","this","String","hijackAttributes","jQuery","ready","$","hamburgerBtn","closeBtn","sidebarNav","s","position","resizeNav","css","innerHeight","radius","Math","sqrt","pow","innerWidth","diameter","margin-top","margin-left","click","event","preventDefault","addClass","removeClass","toggle","closest","scroll","scrollTop","hash","slice","animate","offset","top","toggleClass","text","data","resize"],"mappings":"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","file":"scripts.min.js","sourcesContent":["/*! npm.im/object-fit-images 3.2.3 */\nvar objectFitImages = (function () {\n'use strict';\n\nvar OFI = 'bfred-it:object-fit-images';\nvar propRegex = /(object-fit|object-position)\\s*:\\s*([-\\w\\s%]+)/g;\nvar testImg = typeof Image === 'undefined' ? {style: {'object-position': 1}} : new Image();\nvar supportsObjectFit = 'object-fit' in testImg.style;\nvar supportsObjectPosition = 'object-position' in testImg.style;\nvar supportsOFI = 'background-size' in testImg.style;\nvar supportsCurrentSrc = typeof testImg.currentSrc === 'string';\nvar nativeGetAttribute = testImg.getAttribute;\nvar nativeSetAttribute = testImg.setAttribute;\nvar autoModeEnabled = false;\n\nfunction createPlaceholder(w, h) {\n\treturn (\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='\" + w + \"' height='\" + h + \"'%3E%3C/svg%3E\");\n}\n\nfunction polyfillCurrentSrc(el) {\n\tif (el.srcset && !supportsCurrentSrc && window.picturefill) {\n\t\tvar pf = window.picturefill._;\n\t\t// parse srcset with picturefill where currentSrc isn't available\n\t\tif (!el[pf.ns] || !el[pf.ns].evaled) {\n\t\t\t// force synchronous srcset parsing\n\t\t\tpf.fillImg(el, {reselect: true});\n\t\t}\n\n\t\tif (!el[pf.ns].curSrc) {\n\t\t\t// force picturefill to parse srcset\n\t\t\tel[pf.ns].supported = false;\n\t\t\tpf.fillImg(el, {reselect: true});\n\t\t}\n\n\t\t// retrieve parsed currentSrc, if any\n\t\tel.currentSrc = el[pf.ns].curSrc || el.src;\n\t}\n}\n\nfunction getStyle(el) {\n\tvar style = getComputedStyle(el).fontFamily;\n\tvar parsed;\n\tvar props = {};\n\twhile ((parsed = propRegex.exec(style)) !== null) {\n\t\tprops[parsed[1]] = parsed[2];\n\t}\n\treturn props;\n}\n\nfunction setPlaceholder(img, width, height) {\n\t// Default: fill width, no height\n\tvar placeholder = createPlaceholder(width || 1, height || 0);\n\n\t// Only set placeholder if it's different\n\tif (nativeGetAttribute.call(img, 'src') !== placeholder) {\n\t\tnativeSetAttribute.call(img, 'src', placeholder);\n\t}\n}\n\nfunction onImageReady(img, callback) {\n\t// naturalWidth is only available when the image headers are loaded,\n\t// this loop will poll it every 100ms.\n\tif (img.naturalWidth) {\n\t\tcallback(img);\n\t} else {\n\t\tsetTimeout(onImageReady, 100, img, callback);\n\t}\n}\n\nfunction fixOne(el) {\n\tvar style = getStyle(el);\n\tvar ofi = el[OFI];\n\tstyle['object-fit'] = style['object-fit'] || 'fill'; // default value\n\n\t// Avoid running where unnecessary, unless OFI had already done its deed\n\tif (!ofi.img) {\n\t\t// fill is the default behavior so no action is necessary\n\t\tif (style['object-fit'] === 'fill') {\n\t\t\treturn;\n\t\t}\n\n\t\t// Where object-fit is supported and object-position isn't (Safari < 10)\n\t\tif (\n\t\t\t!ofi.skipTest && // unless user wants to apply regardless of browser support\n\t\t\tsupportsObjectFit && // if browser already supports object-fit\n\t\t\t!style['object-position'] // unless object-position is used\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// keep a clone in memory while resetting the original to a blank\n\tif (!ofi.img) {\n\t\tofi.img = new Image(el.width, el.height);\n\t\tofi.img.srcset = nativeGetAttribute.call(el, \"data-ofi-srcset\") || el.srcset;\n\t\tofi.img.src = nativeGetAttribute.call(el, \"data-ofi-src\") || el.src;\n\n\t\t// preserve for any future cloneNode calls\n\t\t// https://github.com/bfred-it/object-fit-images/issues/53\n\t\tnativeSetAttribute.call(el, \"data-ofi-src\", el.src);\n\t\tif (el.srcset) {\n\t\t\tnativeSetAttribute.call(el, \"data-ofi-srcset\", el.srcset);\n\t\t}\n\n\t\tsetPlaceholder(el, el.naturalWidth || el.width, el.naturalHeight || el.height);\n\n\t\t// remove srcset because it overrides src\n\t\tif (el.srcset) {\n\t\t\tel.srcset = '';\n\t\t}\n\t\ttry {\n\t\t\tkeepSrcUsable(el);\n\t\t} catch (err) {\n\t\t\tif (window.console) {\n\t\t\t\tconsole.warn('https://bit.ly/ofi-old-browser');\n\t\t\t}\n\t\t}\n\t}\n\n\tpolyfillCurrentSrc(ofi.img);\n\n\tel.style.backgroundImage = \"url(\\\"\" + ((ofi.img.currentSrc || ofi.img.src).replace(/\"/g, '\\\\\"')) + \"\\\")\";\n\tel.style.backgroundPosition = style['object-position'] || 'center';\n\tel.style.backgroundRepeat = 'no-repeat';\n\tel.style.backgroundOrigin = 'content-box';\n\n\tif (/scale-down/.test(style['object-fit'])) {\n\t\tonImageReady(ofi.img, function () {\n\t\t\tif (ofi.img.naturalWidth > el.width || ofi.img.naturalHeight > el.height) {\n\t\t\t\tel.style.backgroundSize = 'contain';\n\t\t\t} else {\n\t\t\t\tel.style.backgroundSize = 'auto';\n\t\t\t}\n\t\t});\n\t} else {\n\t\tel.style.backgroundSize = style['object-fit'].replace('none', 'auto').replace('fill', '100% 100%');\n\t}\n\n\tonImageReady(ofi.img, function (img) {\n\t\tsetPlaceholder(el, img.naturalWidth, img.naturalHeight);\n\t});\n}\n\nfunction keepSrcUsable(el) {\n\tvar descriptors = {\n\t\tget: function get(prop) {\n\t\t\treturn el[OFI].img[prop ? prop : 'src'];\n\t\t},\n\t\tset: function set(value, prop) {\n\t\t\tel[OFI].img[prop ? prop : 'src'] = value;\n\t\t\tnativeSetAttribute.call(el, (\"data-ofi-\" + prop), value); // preserve for any future cloneNode\n\t\t\tfixOne(el);\n\t\t\treturn value;\n\t\t}\n\t};\n\tObject.defineProperty(el, 'src', descriptors);\n\tObject.defineProperty(el, 'currentSrc', {\n\t\tget: function () { return descriptors.get('currentSrc'); }\n\t});\n\tObject.defineProperty(el, 'srcset', {\n\t\tget: function () { return descriptors.get('srcset'); },\n\t\tset: function (ss) { return descriptors.set(ss, 'srcset'); }\n\t});\n}\n\nfunction hijackAttributes() {\n\tfunction getOfiImageMaybe(el, name) {\n\t\treturn el[OFI] && el[OFI].img && (name === 'src' || name === 'srcset') ? el[OFI].img : el;\n\t}\n\tif (!supportsObjectPosition) {\n\t\tHTMLImageElement.prototype.getAttribute = function (name) {\n\t\t\treturn nativeGetAttribute.call(getOfiImageMaybe(this, name), name);\n\t\t};\n\n\t\tHTMLImageElement.prototype.setAttribute = function (name, value) {\n\t\t\treturn nativeSetAttribute.call(getOfiImageMaybe(this, name), name, String(value));\n\t\t};\n\t}\n}\n\nfunction fix(imgs, opts) {\n\tvar startAutoMode = !autoModeEnabled && !imgs;\n\topts = opts || {};\n\timgs = imgs || 'img';\n\n\tif ((supportsObjectPosition && !opts.skipTest) || !supportsOFI) {\n\t\treturn false;\n\t}\n\n\t// use imgs as a selector or just select all images\n\tif (imgs === 'img') {\n\t\timgs = document.getElementsByTagName('img');\n\t} else if (typeof imgs === 'string') {\n\t\timgs = document.querySelectorAll(imgs);\n\t} else if (!('length' in imgs)) {\n\t\timgs = [imgs];\n\t}\n\n\t// apply fix to all\n\tfor (var i = 0; i < imgs.length; i++) {\n\t\timgs[i][OFI] = imgs[i][OFI] || {\n\t\t\tskipTest: opts.skipTest\n\t\t};\n\t\tfixOne(imgs[i]);\n\t}\n\n\tif (startAutoMode) {\n\t\tdocument.body.addEventListener('load', function (e) {\n\t\t\tif (e.target.tagName === 'IMG') {\n\t\t\t\tfix(e.target, {\n\t\t\t\t\tskipTest: opts.skipTest\n\t\t\t\t});\n\t\t\t}\n\t\t}, true);\n\t\tautoModeEnabled = true;\n\t\timgs = 'img'; // reset to a generic selector for watchMQ\n\t}\n\n\t// if requested, watch media queries for object-fit change\n\tif (opts.watchMQ) {\n\t\twindow.addEventListener('resize', fix.bind(null, imgs, {\n\t\t\tskipTest: opts.skipTest\n\t\t}));\n\t}\n}\n\nfix.supportsObjectFit = supportsObjectFit;\nfix.supportsObjectPosition = supportsObjectPosition;\n\nhijackAttributes();\n\nreturn fix;\n\n}());\n","jQuery(document).ready(function(){\n    \n    // TARGET CACHING ELEMENTS VARIABLES\n    var $            = jQuery,\n        hamburgerBtn = jQuery('.menu-btn'),\n            closeBtn = jQuery('.close-menu'),\n          sidebarNav = jQuery('#sidebar-navigation'),\n                   s = $(\"body.home .header-main\"),\n                 pos = s.position(); \n\n    $('.btn-menu').click(function(event){\n        event.preventDefault();\n        $('.sidebar-nav').addClass('open');\n    }); \n\n    $('.sidebar-nav-close').click(function(event){\n        event.preventDefault();\n        $('.sidebar-nav').removeClass('open');\n    }); \n\n    $('.btn-search').click(function(event){\n        event.preventDefault();\n        $('.site-search').toggle();\n\n    }); \n\n    //mobile navigation\n    hamburgerBtn.click(function(event){\n        event.preventDefault();\n        sidebarNav.addClass('open');\n    }); \n\n    closeBtn.click(function(event){\n        event.preventDefault();\n        var obj=$(this).closest(sidebarNav);\n        obj.removeClass('open');\n    });     \n              \n    $(window).scroll(function() {\n        var windowpos = $(window).scrollTop();\n        if (windowpos >= 500) {\n            s.addClass(\"bg\");\n        } else {\n            s.removeClass(\"bg\"); \n        }\n    });\n\n     //basic page scroll     \n    $(\".scroll\").click(function(event){\n          // Figure out element to scroll to\n          var target = $(this.hash);\n          target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n          // Does a scroll target exist?\n          if (target.length) {\n            // Only prevent default if animation is actually gonna happen\n            event.preventDefault();\n            $('html, body').animate({\n              scrollTop: target.offset().top - 350\n            }, 1000);\n          }\n    });\n\n\n    function resizeNav() {\n    // Set the nav height to fill the window\n    $(\"#nav-fullscreen\").css({\"height\": window.innerHeight});\n\n    // Set the circle radius to the length of the window diagonal,\n    // this way we're only making the circle as big as it needs to be.\n    var radius = Math.sqrt(Math.pow(window.innerHeight, 2) + Math.pow(window.innerWidth, 2));\n    var diameter = radius * 2;\n    $(\"#nav-overlay\").width(diameter);\n    $(\"#nav-overlay\").height(diameter);\n    $(\"#nav-overlay\").css({\"margin-top\": -radius, \"margin-left\": -radius});\n}\n\n// Set up click and window resize callbacks, then init the nav.\n\n    $(\"#nav-toggle\").click(function() {\n\n        $(\"#nav-toggle, #nav-overlay, #nav-fullscreen\").toggleClass(\"open\");\n\n          var el = $(this);\n          if (el.text() == el.data(\"text-swap\")) {\n            el.text(el.data(\"text-original\"));\n          } else {\n            el.data(\"text-original\", el.text());\n            el.text(el.data(\"text-swap\"));\n          }\n\n\n    });\n\n    $(window).resize(resizeNav);\n\n    resizeNav();\n    \n\n\n    \n});\n\n\n"]}